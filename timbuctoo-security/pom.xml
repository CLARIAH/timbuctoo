<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>timbuctoo</groupId>
    <artifactId>timbuctoo</artifactId>
    <version>1.0.7-SNAPSHOT</version>
  </parent>

  <artifactId>timbuctoo-security</artifactId>
  <name>Timbuctoo security</name>
  <description>Contains all the classes that have something to do with securing the rest service.</description>

  <properties>
    <apis.version>1.2.3</apis.version>
  </properties>

  <dependencies>
    <!-- ## Repository packages ## -->
    <dependency>
      <groupId>timbuctoo</groupId>
      <artifactId>timbuctoo-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- ## End of repository packages ## -->

    <!-- ## Main libraries ## -->
    <dependency>
      <groupId>nl.knaw.huygens</groupId>
      <artifactId>huygens-security</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <!-- Apis authorization server communication -->
    <dependency>
      <groupId>nl.surfnet.apis</groupId>
      <artifactId>apis-resource-server-library</artifactId>
      <version>${apis.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>stax-api</artifactId>
          <groupId>stax</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jettison</artifactId>
          <groupId>org.codehaus.jettison</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-core</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-aop</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-beans</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jul-to-slf4j</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Dependencies needed for deserializing the VerifyTokenResponse -->
    <dependency>
      <groupId>nl.surfnet.apis</groupId>
      <artifactId>apis-surfconext-authn</artifactId>
      <version>${apis.version}</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
        <exclusion>
          <artifactId>log4j-over-slf4j</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>openws</artifactId>
          <groupId>org.opensaml</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-core</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-aop</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-beans</artifactId>
          <groupId>org.springframework</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jul-to-slf4j</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jcl-over-slf4j</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>velocity</artifactId>
          <groupId>velocity</groupId>
        </exclusion>
        <exclusion>
          <artifactId>coin-test</artifactId>
          <groupId>org.surfnet.coin</groupId>
        </exclusion>
        <exclusion>
          <artifactId>opensaml</artifactId>
          <groupId>org.opensaml</groupId>
        </exclusion>
        <exclusion>
          <artifactId>apis-authorization-server</artifactId>
          <groupId>nl.surfnet.apis</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- ## End of main libraries ## -->
    
    <!-- ## Test libraries ## -->
    <!-- JUnit test framework -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Mockito mocking framework -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito.version}</version>
    </dependency>
    <!-- ## End of test libraries ## -->
    
    
    <!-- ## Build helper libraries ## -->
    <!-- temporarily? to make ant build work -->
    <!-- default servlet api -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${servlet-api.version}</version>
    </dependency>
    <!-- ## End of build helper libraries ## -->

    <!-- ## Runtime libraries ## -->
    <!-- Open JPA, needed for the communication with the apis authorization
      server -->
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa-kernel</artifactId>
      <version>2.2.2</version>
      <scope>runtime</scope>
    </dependency>
    <!-- ## End of runtime libraries ## -->
  </dependencies>

</project>
