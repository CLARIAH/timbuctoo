#This config allows you to run a local debug version of timbuctoo
#it also explains the options that you need to configure a production-worthy version

securityConfiguration:
  localAuthentication:
    "@class": nl.knaw.huygens.timbuctoo.security.dataaccess.localfile.LocalfileAccessFactory
    # This directory Timbuctoo reads and writes the authorizations a file for each vre.
    authorizationsPath: "/data/auth/authorizations"
    #These files contain 1 user with username="user" and password="password"
    loginsFilePath: "/data/auth/logins.json"
    usersFilePath: "/data/auth/users.json"
  autoLogoutTimeout:
    duration: 8
    timeUnit: HOURS
  federatedAuthentication:
    enabled: true
    authenticationServerUrl: DUMMY
    authenticationCredentials: DUMMY

baseUri: ${BASE_URI} # used to generate next and previous links of a search result
userRedirectUrl: ${TIMBUCTOO_GUI_PUBLIC_URL}

archetypes:
  - name: metadata
    requiredTypeUri: http://rdfs.org/ns/void#Dataset
    description: >
      Dataset metadata records that contain the title, description, licence etc.

      There may be multiple records because this dataset might be built from multiple datasets. To get the record that
      is about this dataset, use the uri of this dataset. If you use a blank string as uri, it will resolve to the
      uri of this dataset (because uri's may be relative)
    predicateDefinitions:
      - name: title
        description: "The name of the dataset"
        predicateUri: http://purl.org/dc/terms/title
      - name: description
        description: "A textual description of the dataset"
        predicateUri: http://purl.org/dc/terms/description
      - name: creator
        description: "An entity, such as a person, organisation, or service, that is primarily responsible for creating the dataset"
        predicateUri: http://purl.org/dc/terms/creator
        reference:
          direction: OUT
          targetArchetype: datasetContributor
      - name: contributor
        description: "An entity, such as a person, organisation, or service, that is responsible for making contributions to the dataset"
        predicateUri: http://purl.org/dc/terms/contributor
        isList: true
        reference:
          direction: OUT
          targetArchetype: datasetContributor
      - name: license
        predicateUri: http://purl.org/dc/terms/license
        description: |
          The license under which a dataset has been published.
          The URIs of some licenses designed specifically for data are:

          - [Public Domain Dedication and License](http://www.opendatacommons.org/licenses/pddl/) (PDDL) — “Public Domain for data/databases”
          - [Open Data Commons Attribution](http://www.opendatacommons.org/licenses/by/) (ODC-By) — “Attribution for data/databases”
          - [Open Database License](http://www.opendatacommons.org/licenses/odbl/) (ODC-ODbL) — “Attribution Share-Alike for data/databases”
          - [CC0 1.0 Universal](http://creativecommons.org/publicdomain/zero/1.0/) — “Creative Commons public domain waiver”
      - name: subject
        description: >
          When someone wants to select a dataset, one of the fundamental questions is, what does the dataset actually offer?
          There are datasets such as DBpedia that cover quite a range of topics, whereas there are others that only talk about
          a certain domain (books, places, etc.).

          For the general case, we recommend the use of a DBpedia resource URI (http://dbpedia.org/resource/XXX) to categorise
          a dataset, where XXX stands for the thing which best describes the main topic of what the dataset is about.

        predicateUri: http://purl.org/dc/terms/subject
        isList: true
      - name: exampleResources
        description: "It can be helpful to name some representative example entites for a dataset. Looking up these entities allows users to quickly get an impression of the kind of data that is present in a dataset."
        predicateUri: http://rdfs.org/ns/void#exampleResource
        isList: true
      - name: banner_image
        description: "You can specify the url of an image that is representative for the dataset here."
        predicateUri: http://xmlns.com/foaf/0.1/depiction
      - name: color
        description: "You can specify a color that is representative for the dataset here."
        predicateUri: http://timbuctoo.huygens.knaw.nl/v5/vocabulary#hasColor
      - name: files
        description: "The tabular files (e.g. excel) that have been uploaded to this dataset"
        predicateUri: http://www.w3.org/ns/prov#wasDerivedFrom
        isList: true
        reference:
          direction: OUT
          targetArchetype: uploadedFile
  - name: datasetContributor
    requiredTypeUri: http://xmlns.com/foaf/0.1/Organization
    description: "An organisation that creates data"
    predicateDefinitions:
      - name: name
        description: "The name of the organisation"
        predicateUri: http://www.w3.org/2000/01/rdf-schema#label
      - name: homepage
        description: "The homepage of the organisation"
        predicateUri: http://xmlns.com/foaf/0.1/homepage
      - name: image
        description: "An image (e.g. a logo) of the organisation"
        predicateUri: http://xmlns.com/foaf/0.1/depiction
  - name: uploadedFile
    requiredTypeUri: http://timbuctoo.huygens.knaw.nl/v5/types#tabularFile
    description: "A file with tabular data and a basic rdf version of it's contents"
    predicateDefinitions:
      - name: mimetype
        description: "The mimetype of the original file"
        predicateUri: http://timbuctoo.huygens.knaw.nl/v5/vocabulary#mimetype


databases:
  databaseLocation: /root/data/datasets

databaseConfiguration:
  databasePath: "/root/timbuctoo-prod-db"

dataSet:
  dataSetMetadataLocation: /root/data/datasets
  fileStorage:
    "@class": nl.knaw.huygens.timbuctoo.v5.filestorage.implementations.filesystem.FileSystemFileStorageFactory
    rootDir: /root/data/datasets
  rdfIo:
    "@class": nl.knaw.huygens.timbuctoo.v5.rdfio.implementations.rdf4j.Rdf4jIoFactory
    rdfFormat: application/n-quads

# The base uri will be the base uri for all the generated RDF by Timbuctoo.
rdfUriHelper:
  rdfBaseUri: http://example.org/

# Timeouts
# the 'duration' is a number
# the timeUnit is a 'java.util.concurrent.TimeUnit'
searchResultAvailabilityTimeout:
  duration: 8
  timeUnit: HOURS

webhooks:
  vreAdded: ${TIMBUCTOO_SEARCH_URL}
  httpClient:
    connectionRequestTimeout: 200ms


activeMq:
  #persistent=false means that the broker does not try to store the queue. This is not needed in a debugrun.
  #useShutdownHook=false is needed because the activeMq bundle already takes care of shutting down activeMq
  #using a vm:// url will also add two amq metrics to the dropwizard metrics. Using a remote url means you have
  #to export the metrics from the remote VM's jmx yourself. See http://activemq.apache.org/jmx.html for more info
  brokerUrl: vm://timbuctoo?broker.persistent=false&broker.useShutdownHook=false
  shutdownWaitInSeconds: 1 #use for debug runs only!

persistenceManager:
  useDummy: yes #set to "no" to connect to a real handle server
#  privateKeyFile:
#  cypher:
#  namingAuthority:
#  prefix:

#Note! disable this for production builds
allowGremlinEndpoint: true

server:
  applicationConnectors:
    - type: http #Note! if you change this you might or might not also want to change the baseUri
      port: 80 #Note! if you change this you might or might not also want to change the baseUri
  adminConnectors:
    - type: http
      port: 81
  requestLog:
    appenders: [] #All requests are already logged using logging.LoggingFilter so the seperate requestlog is not needed

logging:
  appenders:
    - type: console
      logFormat: "- %-5p  %m [%c{60}]%n"
#enable this to send the logs to an external log server
#    - type: gelf
#      host: 192.168.99.100
#      port: 32768
#      useMarker: true #
#      includeFullMDC: true #We put the request information in the MDC
  level: INFO

#enable this to send the metrics to graphite
#metrics:
#  reporters:
#     - type: graphite
#       host: 192.168.99.100
#       port: 32778
#       prefix: timbuctoo
